FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copie os arquivos do projeto
COPY ["Contato/ContatoService/ContatoAPI/ContatoService.API.csproj", "Contato/ContatoService/ContatoAPI/"]
COPY ["Contato/ContatoAplicacao/Contato.Aplicacao.csproj", "Contato/ContatoAplicacao/"]
COPY ["Contato/ContatoInfraestrutura/Contato.Infraestrutura.csproj", "Contato/ContatoInfraestrutura/"]
COPY ["Contato/ContatoCore/Contato.Core.csproj", "Contato/ContatoCore/"]

# Restore
RUN dotnet restore "./Contato/ContatoService/ContatoAPI/ContatoService.API.csproj"

# Instale o dotnet-ef CLI globalmente
RUN dotnet tool install --global dotnet-ef

# Adicione o caminho global do dotnet tools ao PATH
ENV PATH="$PATH:/root/.dotnet/tools"

# Copie o restante dos arquivos
COPY . .

# Build
WORKDIR "/src/Contato/ContatoService/ContatoAPI"
RUN dotnet build "./ContatoService.API.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./ContatoService.API.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "ContatoService.API.dll", "ef", "database", "update"]
